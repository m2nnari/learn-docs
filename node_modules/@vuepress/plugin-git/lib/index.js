"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.gitPlugin = void 0;
const utils_1 = require("./utils");
__exportStar(require("./types"), exports);
__exportStar(require("./utils"), exports);
const gitPlugin = ({ createdTime, updatedTime, contributors }, app) => {
    const cwd = app.dir.source();
    const isGitRepoValid = utils_1.checkGitRepo(cwd);
    return {
        name: '@vuepress/plugin-git',
        extendsPageData: async (page) => {
            const git = {};
            if (!isGitRepoValid || page.filePathRelative === null) {
                return { git };
            }
            if (createdTime !== false) {
                git.createdTime = await utils_1.getCreatedTime(page.filePathRelative, cwd);
            }
            if (updatedTime !== false) {
                git.updatedTime = await utils_1.getUpdatedTime(page.filePathRelative, cwd);
            }
            if (contributors !== false) {
                git.contributors = await utils_1.getContributors(page.filePathRelative, cwd);
            }
            return { git };
        },
    };
};
exports.gitPlugin = gitPlugin;
exports.default = exports.gitPlugin;
//# sourceMappingURL=index.js.map