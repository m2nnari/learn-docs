"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handlePageChange = void 0;
const core_1 = require("@vuepress/core");
/**
 * Event handler for page change event
 */
const handlePageChange = async (app, filePath) => {
    // get page index of the changed file
    const pageIndex = app.pages.findIndex((page) => page.filePath === filePath);
    if (pageIndex === -1) {
        return;
    }
    // get the old page of the changed file
    const oldPage = app.pages[pageIndex];
    // create a new page from the changed file
    const changedPage = await core_1.createPage(app, {
        filePath,
    });
    // replace the old page
    app.pages.splice(pageIndex, 1, changedPage);
    // prepare page files
    await core_1.preparePageComponent(app, changedPage);
    await core_1.preparePageData(app, changedPage);
    await core_1.preparePageRoutes(app, changedPage);
    // if the key is also changed, we also need to prepare pages entry
    if (oldPage.key !== changedPage.key) {
        await core_1.preparePagesComponent(app);
        await core_1.preparePagesData(app);
        await core_1.preparePagesRoutes(app);
    }
};
exports.handlePageChange = handlePageChange;
//# sourceMappingURL=handlePageChange.js.map